<div class="col-md-6">

    <section>


        @if (Settings.Value.LocalizationMethod == LocalizationMethods.UserLocalization && Settings.Value.AccountsCultureUsage.RegisterPageEditable)
        {
            if (Settings.Value.AccountsCultureUsage.RegisterPageRequired)
            {
                <div class="form-group">
                    <label>@Localizer["Language"] <span style="color: red"> *</span></label>
                    <select v-model="model.culture" class="form-control" id="lang" v-on:input="onUserInput(event)" data-required="True">
                        @{
                            foreach (var t in Settings.Value.LocalizationSupportedLanguages)
                            {
                                <option value="@t.Culture">@t.Name</option>
                            }
                        }
                    </select>
                </div>
            }
            else
            {
                <div class="form-group">
                    <label>@Localizer["Language"]</label>
                    <select v-model="model.culture" class="form-control" id="lang">
                        @{
                            foreach (var t in Settings.Value.LocalizationSupportedLanguages)
                            {
                                <option value="@t.Culture">@t.Name</option>
                            }
                        }
                    </select>
                </div>
            }

        }

        @if (Settings.Value.AccountsLegalIdNumberUsage.RegisterPageEditable)
        {
            if (Settings.Value.AccountsLegalIdNumberUsage.RegisterPageRequired)
            {
                <div class="form-group">
                    <label>@Localizer["Legal ID number"] <span style="color: red"> *</span></label>
                    <input type="number" v-model="model.legalIdNumber" class="form-control" id="legalidnumber" v-on:input="onUserInput(event)" data-required="True" autocomplete="nope" />
                </div>
            }
            else
            {
                <div class="form-group">
                    <label>@Localizer["Legal ID number"]</label>
                    <input type="number" v-model="model.legalIdNumber" class="form-control" id="legalidnumber" autocomplete="nope" />
                </div>
            }
        }

        @if (Settings.Value.AccountsUserNameUsage == UserNameGenerationStyles.Email)
        {
            <div class="form-group">
                <label>@Localizer["Email"] <span style="color: red"> *</span></label>
                <input type="email" v-model="model.email" class="form-control" id="email" v-on:input="onUserInput(event)" data-required="True" autocomplete="nope" />
            </div>
        }
        else
        {
            @if (Settings.Value.AccountsUserNameUsage == UserNameGenerationStyles.Input)
            {
                <div class="form-group">
                    <label>@Localizer["User Name"] <span style="color: red"> *</span></label>
                    <input type="text" v-model="model.userName" class="form-control" id="username" v-on:input="onUserInput(event)" data-required="True" autocomplete="nope" />
                </div>
            }

            @if (Settings.Value.AccountsEmailUsage.RegisterPageEditable)
            {
                <div class="form-group">
                    <label>@Localizer["Email"] <span style="color: red"> *</span></label>
                    <input type="email" v-model="model.email" class="form-control" id="email" v-on:input="onUserInput(event)" data-required="True" autocomplete="nope" />
                </div>
            }

        }

        @if (Settings.Value.AccountsPhoneUsage.RegisterPageEditable)
        {
            if (Settings.Value.AccountsPhoneUsage.RegisterPageRequired)
            {
                <div class="form-group">
                    <label>@Localizer["Phone"] <span style="color: red"> *</span></label>
                    <input type="text" v-model="model.phoneNumber" class="form-control" id="phonenumber" v-on:input="onUserInput(event)" data-required="True" autocomplete="nope" />
                </div>
            }
            else
            {
                <div class="form-group">
                    <label>@Localizer["Phone"]</label>
                    <input type="text" v-model="model.phoneNumber" class="form-control" id="phonenumber" autocomplete="nope" />
                </div>
            }
        }

        @if (Settings.Value.AccountsCompanyNameUsage.RegisterPageEditable)
        {
            if (Settings.Value.AccountsCompanyNameUsage.RegisterPageRequired)
            {
                <div class="form-group">
                    <label>@Localizer["Company Name"] <span style="color: red"> *</span></label>
                    <input type="text" v-model="model.companyName" class="form-control" id="companyname" v-on:input="onUserInput(event)" data-required="True" autocomplete="nope" />
                </div>
            }
            else
            {
                <div class="form-group">
                    <label>@Localizer["Company Name"]</label>
                    <input type="text" v-model="model.companyName" class="form-control" id="companyname" autocomplete="nope" />
                </div>
            }
        }

        @if (Settings.Value.AccountsUserSelectableRoleUsage.RegisterPageEditable && Settings.Value.AccountsUserSelectableRoles != null)
        {
            if (Settings.Value.AccountsUserSelectableRoleUsage.RegisterPageRequired)
            {
                <div class="form-group">
                    <label>@Localizer["Usertype"]</label>
                    <select v-model="model.userSelectedRole" class="form-control" id="userselectedrole" v-on:input="onUserInput(event)" data-required="True">
                        @{
                            foreach (var t in Settings.Value.AccountsUserSelectableRoles)
                            {
                                <option value="@t.RoleName">@t.Title</option>
                            }
                        }
                    </select>
                </div>
            }
            else
            {
                <div class="form-group">
                    <label>@Localizer["Usertype"]</label>
                    <select v-model="model.userSelectedRole" class="form-control" id="userselectedrole">
                        @{
                            foreach (var t in Settings.Value.AccountsUserSelectableRoles)
                            {
                                <option value="@t.RoleName">@t.Title</option>
                            }
                        }
                    </select>
                </div>
            }
        }

        @if (Settings.Value.AccountsNameUsage.RegisterPageEditable || Settings.Value.AccountsUserNameUsage== UserNameGenerationStyles.GenerateFromName)
        {
            if (Settings.Value.AccountsNameUsage.RegisterPageRequired || Settings.Value.AccountsUserNameUsage == UserNameGenerationStyles.GenerateFromName)
            {
                <div class="form-group">
                    <label>@Localizer["First Name"] <span style="color: red"> *</span></label>
                    <input type="text" v-model="model.firstName" class="form-control" id="firstname" v-on:input="onUserInput(event)" data-required="True" autocomplete="nope" />
                </div>

                <div class="form-group">
                    <label>@Localizer["Last Name"] <span style="color: red"> *</span></label>
                    <input type="text" v-model="model.lastName" class="form-control" id="lastname" v-on:input="onUserInput(event)" data-required="True" autocomplete="nope" />
                </div>
            }
            else
            {
                <div class="form-group">
                    <label>@Localizer["First Name"]</label>
                    <input type="text" v-model="model.firstName" class="form-control" id="firstname" autocomplete="nope" />
                </div>

                <div class="form-group">
                    <label>@Localizer["Last Name"]</label>
                    <input type="text" v-model="model.lastName" class="form-control" id="lastname" autocomplete="nope" />
                </div>
            }
        }

        @if (Settings.Value.AccountsAddressUsage.RegisterPageEditable)
        {
            if (Settings.Value.AccountsAddressUsage.RegisterPageRequired)
            {

                <div class="form-group">
                    <label>@Localizer["Address"] <span style="color: red"> *</span></label>
                    <input type="text" v-model="model.address" class="form-control" id="address" v-on:input="onUserInput(event)" data-required="True" autocomplete="nope" />
                </div>
            }
            else
            {
                <div class="form-group">
                    <label>@Localizer["Address"]</label>
                    <input type="text" v-model="model.address" class="form-control" id="address" v-on:input="onUserInput(event)" data-required="True" autocomplete="nope" />
                </div>
            }
        }

        @if (Settings.Value.AccountsZipCodeUsage.RegisterPageEditable)
        {
            if (Settings.Value.AccountsZipCodeUsage.RegisterPageRequired)
            {
                <div class="form-group">
                    <label>@Localizer["Zipcode"] <span style="color: red"> *</span></label>
                    <input type="text" v-model="model.zipCode" class="form-control" id="zipcode" v-on:input="onUserInput(event)" data-required="True" autocomplete="nope" />
                </div>
            }
            else
            {
                <div class="form-group">
                    <label>@Localizer["Zipcode"]</label>
                    <input type="text" v-model="model.zipCode" class="form-control" id="zipcode" autocomplete="nope" />
                </div>
            }

        }

        @if (Settings.Value.AccountsCityUsage.RegisterPageEditable)
        {
            if (Settings.Value.AccountsCityUsage.RegisterPageRequired)
            {
                <div class="form-group">
                    <label>@Localizer["City"] <span style="color: red"> *</span></label>
                    <input type="text" v-model="model.city" class="form-control" id="city" v-on:input="onUserInput(event)" data-required="True" autocomplete="nope" />
                </div>
            }
            else
            {
                <div class="form-group">
                    <label>@Localizer["City"]</label>
                    <input type="text" v-model="model.city" class="form-control" id="city" autocomplete="nope" />
                </div>
            }

        }

        @if (Settings.Value.AccountsCountyUsage.RegisterPageEditable)
        {
            if (Settings.Value.AccountsCountyUsage.RegisterPageRequired)
            {
                <div class="form-group">
                    <label>@Localizer["County"] <span style="color: red"> *</span></label>
                    <input type="text" v-model="model.county" class="form-control" id="county" v-on:input="onUserInput(event)" data-required="True" autocomplete="nope" />
                </div>
            }
            else
            {
                <div class="form-group">
                    <label>@Localizer["County"]</label>
                    <input type="text" v-model="model.county" class="form-control" id="county" autocomplete="nope" />
                </div>
            }

        }

        @if (Settings.Value.AccountsCountryUsage.RegisterPageEditable)
        {
            if (Settings.Value.AccountsCountryUsage.RegisterPageRequired)
            {
                <div class="form-group">
                    <label>@Localizer["Country"] <span style="color: red"> *</span></label>
                    <input type="text" v-model="model.country" class="form-control" id="country" v-on:input="onUserInput(event)" data-required="True" autocomplete="nope" />
                </div>
            }
            else
            {
                <div class="form-group">
                    <label>@Localizer["Country"]</label>
                    <input type="text" v-model="model.country" class="form-control" id="country" autocomplete="nope" />
                </div>
            }

        }

        @if (Settings.Value.AccountsAllowEmailNotificationsUsage.RegisterPageEditable)
        {
            <div class="largecheckbox">
                <input id="cb_allowemailnotification" type="checkbox" v-model="model.allowEmailNotifications" /><label>@Localizer["Allow Email Notifications"]</label>
            </div>

        }

        @if (Settings.Value.AccountsAllowSmsNotificationsUsage.RegisterPageEditable)
        {
            <div class="largecheckbox">
                <input id="cb_allowsmsnotification" type="checkbox" v-model="model.allowSmsNotifications" /><label>@Localizer["Allow SMS Notifications"]</label>
            </div>

        }

        @if (Settings.Value.AccountsAllowPublicProfileUsage.RegisterPageEditable)
        {
            <div class="largecheckbox">
                <input id="cb_allowpublicprofile" type="checkbox" v-model="model.allowPublicProfile" /><label>@Localizer["Allow Public Profile"]</label>
            </div>

        }

        <div class="form-group">
            <label>@Localizer["Password"] <span style="color: red"> *</span></label>
            <input v-model="model.password" type="password" class="form-control" id="password" v-on:input="onUserInput(event)" data-required="True" autocomplete="nope" />
        </div>
        <div class="form-group">
            <label>@Localizer["Confirm Password"] <span style="color: red"> *</span></label>
            <input v-model="model.confirmPassword" type="password" class="form-control" id="confpassword" v-on:input="onUserInput(event)" data-required="True" autocomplete="nope" />
        </div>
        <div v-if="!passwordsMatch" class="alert alert-danger">@Localizer["Passwords must match"] !</div>
        <button type="button" class="btn btn-primary" v-on:click="registerNewLocalUser()">@Localizer["Register"]</button>
    </section>

</div>
