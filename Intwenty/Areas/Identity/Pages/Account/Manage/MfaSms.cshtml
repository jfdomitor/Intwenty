@page
@model MfaSmsModel
@{
    ViewData["Title"] = "SMS 2FA";
    ViewData["ActivePage"] = ManageNavPages.MfaAuth;
}


<h4>@ViewData["Title"]</h4>

<div id="app">
    <div class="alert alert-primary" ba-if="root.step==1">
        @Localizer["MFASMSPHONEREQ"]
        <button type="button" class="btn-close float-end" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
    <div class="alert alert-danger" ba-if="root.errorSendingSms">
        Something went wrong. This service is not available at the moment
        <button type="button" class="btn-close float-end" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
    <div class="alert alert-primary" ba-if="root.step==2">
        @Localizer["MFASMSCODESENT"]
        <button type="button" class="btn-close float-end" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
    <div class="alert alert-danger" ba-if="root.errorVerifySms">
        @Localizer["MFANOTVERIFIED"] <a asp-page="./MfaSms">@Localizer["clicking here"]</a>
        <button type="button" class="btn-close float-end" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
    <div class="alert alert-success" ba-if="root.step==3">
        @Localizer["Thank you. Two-factor authentication is now set up"]
        <button type="button" class="btn-close float-end" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>

    <div class="row">
        <div class="col-md-6">

            <div class="form-group" ba-if="root.step==1">
                <label clase="control-label">@Localizer["Phone"]</label>
                <input type="number" ba-bind="root.model.phoneNumber" class="form-control" />
                <div class="text-danger" ba-if="root.errorInvalidPhone">@Localizer["Invalid format"]</div>
                <button class="btn btn-primary m-2" ba-click="sendPhoneNumber()">@Localizer["Send"]</button>
            </div>

            <div class="form-group" ba-if="root.step==2">
                <label clase="control-label">@Localizer["Code"]</label>
                <input type="number" ba-bind="root.model.code" class="form-control" />
                <button class="btn btn-primary m-2" ba-click="sendCode()">@Localizer["Verify"]</button>
            </div>
        </div>
    </div>
</div>

@section Scripts
    {
    <script type="module">

        import {BareaApp} from '/js/barea_dev.js';

        const appcontent = {
            data:
            {
                model: { phoneNumber: "", code: "", resultCode:"" },
                step: 1,
                errorSendingSms: false,
                errorInvalidPhone: false,
                errorVerifySms: false
            },
            methods: 
            {
                sendPhoneNumber: function () 
                {

                    var baseurl = '@Url.Content("~/Identity/Account/Manage/")';
                    var endpointurl = baseurl + "MfaSms?handler=UpdatePhoneNumber";
                    var antiforgerytoken = '@AntiForgery.GetAndStoreTokens(HttpContext).RequestToken';

                    fetch(endpointurl, {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json",
                            "RequestVerificationToken": antiforgerytoken
                        },
                        body: JSON.stringify(clientdata.model)
                    })
                    .then(response => response.json())
                    .then(data => {
                        clientdata.step = 2;
                        clientdata.model = data;
                    })
                    .catch(error => {
                        clientdata.model = error;
                        if (clientdata.model.resultCode == "ERROR_INVALID_PHONE") {
                            clientdata.errorInvalidPhone = true;
                        }
                        if (clientdata.model.resultCode == "ERROR_GEN_TOKEN") {
                            clientdata.errorSendingSms = true;
                        }
                    });
                },
                sendCode: function () {
                    var baseurl = '@Url.Content("~/Identity/Account/Manage/")';
                    var endpointurl = baseurl + "MfaSms?handler=VerifyCode";
                    var antiforgerytoken = '@AntiForgery.GetAndStoreTokens(HttpContext).RequestToken';

                    fetch(endpointurl, {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json",
                            "RequestVerificationToken": antiforgerytoken
                        },
                        body: JSON.stringify(clientdata.model)
                    })
                    .then(response => response.json())
                    .then(data => {
                        clientdata.step = 3;
                        clientdata.model = data;
                    })
                    .catch(error => {
                        clientdata.errorVerifySms = true;
                        clientdata.model = error;
                    });
                }
            },
            computed: {
                example: function () {
                    // Any computed logic goes here
                }
            },
            mounted: function (applicationData) {
                var baseurl = '@Url.Content("~/Identity/Account/Manage/")';
                var endpointurl = baseurl + "MfaSms?handler=Load";

                const retval = fetch(endpointurl)
                    .then(response => response.json())
                    .then(data => {
                        applicationData.model = data;
                    })
                    .catch(error => console.error("Error loading data:", error));

                    return retval;
            }

        };

        const app = new BareaApp();
        let clientdata = await app.mount("app", appcontent);

    </script>

}

