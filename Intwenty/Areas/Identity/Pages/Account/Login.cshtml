@page
@model LoginModel
@using Microsoft.Extensions.Options
@using Intwenty.Model
@{
    ViewData["Title"] = Localizer["Log In"].Value;
}



<partial name="_LoginHeader" model="Model" />


<div class="row" id="app">

    @if (HttpContext.Request.Query.ContainsKey(Settings.Value.AccountsEmergencyLoginQueryKey))
    {
        <partial name="_LoginLocal" model="Model" />

    }
    else
    {

        if (Settings.Value.UseBankIdLogin)
        {
            <partial name="_LoginBankId" model="Model" />

        }
        else if (Settings.Value.UseFrejaEIdLogin)
        {

            <partial name="_LoginFreja" model="Model" />
        }
        else
        {

            if (Settings.Value.UseLocalLogins)
            {
                <partial name="_LoginLocal" model="Model" />
            }


            if (Settings.Value.UseExternalLogins)
            {
                <partial name="_LoginExternal" model="Model" />
            }
        }

    }

</div>



@section Scripts
 {

    <script>

        var e = getBareaApp(false);

        bareaapp.addMountedHandler(function (data) 
        {
            @if (Settings.Value.UseFrejaEIdLogin)
            {
                <text>
                       this.startFreja();
                </text>
            }
            @if (Settings.Value.UseBankIdLogin && Settings.Value.BankIdUsage == BankIdUsageTypes.OtherDevice)
            {
                <text>
                       this.startBankId('BANKID_START_OTHER');
                </text>
            }
        });


        bareaapp.addHandler("localLogin", function (event, element) {
            var context = this;
            var baseurl = '@Url.Content("~/Identity/Account/")';
            var endpointurl = baseurl + "Login?handler=LocalLogin";
            var antiforgerytoken = '@AntiForgery.GetAndStoreTokens(HttpContext).RequestToken';

            fetch(endpointurl, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                    "RequestVerificationToken": antiforgerytoken
                },
                body: JSON.stringify(context.model)
            })
                .then(response => response.json())
                .then(data => {
                    if (data.returnUrl) {
                        window.location = data.returnUrl;
                    } else {
                        context.model = data;
                        if (context.model.resultCode === "LOCKEDOUT" || context.model.resultCode === "REQUIREMFA") {
                            window.location = context.model.redirectUrl;
                        }
                    }
                })
                .catch(error => console.error("Error:", error));
        });


        bareaapp.mount("app",
        {
           model: { userName: "", password: "", resultCode: "INIT", returnUrl: "@Model.ReturnUrl", actionCode: "" }
        });

        var app = new Vue({
            el: '#app',
            data:
            {
                model: { userName: "", password: "", resultCode: "INIT", returnUrl: "@Model.ReturnUrl", actionCode:"" }
            },
            methods: {

                localLogin: function () {
                    var context = this;
                    var baseurl = '@Url.Content("~/Identity/Account/")';
                    var endpointurl = baseurl + "Login?handler=LocalLogin";
                    var antiforgerytoken = '@AntiForgery.GetAndStoreTokens(HttpContext).RequestToken';

                    $.ajax({
                        url: endpointurl,
                        type: "POST",
                        contentType: "application/json",
                        data: JSON.stringify(context.model),
                        headers:
                        {
                            RequestVerificationToken: antiforgerytoken
                        },
                        success: function (response) {
                            window.location = response.returnUrl;
                        },
                        error: function (response) {
                            context.model = response.responseJSON;
                            if (context.model.resultCode == "LOCKEDOUT" || context.model.resultCode == "REQUIREMFA") {
                                window.location = context.model.redirectUrl;
                            }
                        }
                    });
                },
                startBankId: function (method)
                {

                    var context = this;
                    var baseurl = '@Url.Content("~/Identity/Account/")';
                    var endpointurl = baseurl + "Login?handler=StartBankId";
                    var antiforgerytoken = '@AntiForgery.GetAndStoreTokens(HttpContext).RequestToken';


                     context.model.actionCode = method;

                    $.ajax({
                        url: endpointurl,
                        type: "POST",
                        contentType: "application/json",
                        data: JSON.stringify(context.model),
                        headers: {
                            RequestVerificationToken: antiforgerytoken
                        },
                        success: function (response)
                        {
                            context.model = response;
                            if (context.model.resultCode =="BANKID_AUTH_QR")
                                setTimeout(function () { context.authenticateBankId(); }, 500);
                        },
                        error: function (response)
                        {
                            context.model = response.responseJSON;
                        }
                    });
                },
                authenticateBankId: function ()
                {

                    var context = this;
                    var baseurl = '@Url.Content("~/Identity/Account/")';
                    var endpointurl = baseurl + "Login?handler=AuthenticateBankId";
                    var antiforgerytoken = '@AntiForgery.GetAndStoreTokens(HttpContext).RequestToken';

                    context.model.actionCode = "WAIT_FOR_BANKID_AUTH";

                    $.ajax({
                        url: endpointurl,
                        type: "POST",
                        contentType: "application/json",
                        data: JSON.stringify(context.model),
                        headers: {
                            RequestVerificationToken: antiforgerytoken
                        },
                        success: function (response)
                        {
                            window.location = response.returnUrl;

                        },
                        error: function (response)
                        {
                            context.model = response.responseJSON;
                            if (context.model.resultCode == "LOCKEDOUT" || context.model.resultCode == "REQUIREMFA") {
                                window.location = context.model.redirectUrl;
                            }
                        }
                    });
                },
                startFreja: function ()
                {

                    var context = this;
                    var baseurl = '@Url.Content("~/Identity/Account/")';
                    var endpointurl = baseurl + "Login?handler=StartFreja";
                    var antiforgerytoken = '@AntiForgery.GetAndStoreTokens(HttpContext).RequestToken';


                    $.ajax({
                        url: endpointurl,
                        type: "POST",
                        contentType: "application/json",
                        data: JSON.stringify(context.model),
                        headers: {
                            RequestVerificationToken: antiforgerytoken
                        },
                        success: function (response)
                        {
                            context.model = response;

                        },
                        error: function (response)
                        {
                            context.model = response.responseJSON;
                        }
                    });
                },
                authenticateFreja: function ()
                {

                    var context = this;
                    var baseurl = '@Url.Content("~/Identity/Account/")';
                    var endpointurl = baseurl + "Login?handler=AuthenticateFreja";
                    var antiforgerytoken = '@AntiForgery.GetAndStoreTokens(HttpContext).RequestToken';


                    $.ajax({
                        url: endpointurl,
                        type: "POST",
                        contentType: "application/json",
                        data: JSON.stringify(context.model),
                        headers: {
                            RequestVerificationToken: antiforgerytoken
                        },
                        success: function (response)
                        {

                            window.location = response.returnUrl;

                        },
                        error: function (response)
                        {
                            context.model = response.responseJSON;
                            if (context.model.resultCode == "LOCKEDOUT" || context.model.resultCode == "REQUIREMFA") {
                                window.location = context.model.redirectUrl;
                            }
                        }
                    });
                },

            },
            computed:
            {
                example: function ()
                {

                }

            },
            mounted: function ()
            {
               @if(Settings.Value.UseFrejaEIdLogin)
               {
                   <text>
                        this.startFreja();
                   </text>
               }
               @if(Settings.Value.UseBankIdLogin && Settings.Value.BankIdUsage == BankIdUsageTypes.OtherDevice)
               {
                   <text>
                        this.startBankId('BANKID_START_OTHER');
                   </text>
               }



         }
     });
    </script>
}