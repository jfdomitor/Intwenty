@page "{Id}"
@model ProductModel
@{
    ViewData["Title"] = "Edit Product";
}

@await Html.PartialAsync("_Modals")


<div id="app">

    <br />
    <br />
    <div class="card">
        <div class="card-header"><h2>Product</h2></div>
        <div class="card-body">
            Manage the product <b>{{root.model.productName}}</b>
            <br />
            <br />
            <ul class="nav">
                <li class="nav-item">
                    <a asp-area="Identity" asp-page="/IAM/ProductList" role="button" class="btn btn-sm btn-outline-secondary"><span class="far fa-hand-point-left" style="font-size:large"></span> Back to list</a>
                </li>
                <li class="nav-item">
                    <button class="btn btn-sm btn-outline-primary" type="button" ba-click="updateEntity()" style="margin-left:10px"><span class="fa fa-save" style="font-size:large"></span> Save</button>
                </li>
            </ul>
        </div>
    </div>
    <br />
    <div class="alert alert-success alert-dismissible fade show" role="alert" id="savealert" ba-if="root.model.modelSaved">
        <strong>Changes have been saved !</strong><br />
        <button type="button" class="btn-close float-end" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>



    <br />

    <div class="form-group">
        <label class="control-label">Name<span style="color: red"> *</span></label>
        <input id="tb_email" type="text" class="form-control form-control-sm" ba-bind="root.model.productName" />
    </div>

    <br />

    <ul class="nav">
        <li class="nav-item">
            <h5>Available Authorization Items</h5>
            <p>Per product authorization items can be assigned to users and organization to authorize an individual or a group of indivudals.</p>
        </li>
    </ul>
    <br />
    <table class="table table">
        <thead>
            <tr>

                <th style="width:5%"></th>
                <th style="width:30%">Name</th>
                <th style="width:30%">Type</th>
            </tr>
        </thead>
        <tbody ba-foreach="item in root.model.authorizationItems">
            <tr>
                <td><div class="btn btn-sm btn-danger" ba-click="removeAuthorizationItem()" title="Remove"><i class="fa fa-trash"></i></div></td>
                <td>{{item.name}}</td>
                <td>{{item.authorizationType}}</td>
            </tr>
        </tbody>
    </table>


</div>

@section Scripts
    {

    <script type="module">

        import { BareaApp } from '/js/barea_dev.js';

        const appcontent = {
            data:
            {
                model: {authorizationItems:[],productName:""},
                authorizationItems: []
            },
            methods: {

              
                updateEntity: async function () {
                    let baseurl = '@Url.Content("~/Identity/IAM/")';
                    let endpointurl = baseurl + "Product/@Model.Id?handler=UpdateEntity";
                    let antiforgerytoken = '@AntiForgery.GetAndStoreTokens(HttpContext).RequestToken';

                    try {
                        const response = await fetch(endpointurl, {
                            method: "POST",
                            headers: {
                                "Content-Type": "application/json",
                                "RequestVerificationToken": antiforgerytoken
                            },
                            body: JSON.stringify(clientdata.model)
                        });

                        if (!response.ok) {
                            throw await response.json();
                        }


                        clientdata.model = await response.json();
                        clientdata.model.modelSaved = true;
                        setTimeout(function () { clientdata.model.modelSaved = false; }, 3000);

                    } catch (error) {
                        //raiseErrorModal(error);
                    }


                }
               

            },
            computed:{},
            mounted: function (applicationData) {
                let baseurl = '@Url.Content("~/Identity/IAM/")';
                let endpointurl = baseurl + "Product/@Model.Id?handler=Load";
                const retval = fetch(endpointurl)
                    .then(response => response.json())
                    .then(data => {
                        applicationData.model = data;
                        return data;
                    })
                    .catch(error => console.error("Error fetching data:", error));

                return retval;

            }
        };

        const app = new BareaApp();
        let clientdata = await app.mount("app", appcontent);

    </script>


  
}

